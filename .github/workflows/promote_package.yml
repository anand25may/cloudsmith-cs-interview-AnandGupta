name: Promote Python Package

on:
  repository_dispatch:
    types: [package-synced]

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'staging'
  CLOUDSMITH_PRODUCTION_REPO: 'production'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: 'example_package'

permissions:
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Tag and promote ready-for-production packages
        run: |
          # Tag latest package from webhook
          PACKAGE_NAME="${{ github.event.client_payload.package_name }}"
          echo "Webhook received package name: $PACKAGE_NAME"

          PACKAGE_DATA=$(cloudsmith list packages \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} \
            --query "name:$PACKAGE_NAME" --format json)

          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.[0].identifier')

          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" == "null" ]; then
            echo "No synced package found for $PACKAGE_NAME"
            exit 1
          fi

          echo "Tagging $IDENTIFIER with 'ready-for-production'"
          cloudsmith tag add \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER \
            ready-for-production

          # Promote all ready-for-production packages
          PACKAGE_QUERY="tags:ready-for-production"
          PACKAGE_IDS=$(cloudsmith list packages \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} \
            --query "$PACKAGE_QUERY" --format json | jq -r '.[].identifier')

          if [ -z "$PACKAGE_IDS" ]; then
            echo "No packages found with ready-for-production tag."
            exit 0
          fi

          for PACKAGE_ID in $PACKAGE_IDS; do
            echo "Promoting package $PACKAGE_ID"
            cloudsmith mv --yes \
              ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$PACKAGE_ID \
              ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_PRODUCTION_REPO }}
          done
        shell: bash
